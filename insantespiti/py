
import cv2
from ultralytics import YOLO
import numpy as np

# Modeli yükle
model = YOLO("yolov8n.pt")  # COCO dataset ile eğitilmiş, 80 sınıfı tanır

# Görüntüyü yükle
img_path = r"C:\Users\KIRIKHAN BİLGİSAYAR\Downloads\indir (1).jpeg"
img = cv2.imread(img_path)
height, width, _ = img.shape

# Model ile tahmin
results = model.predict(source=img, conf=0.5, save=False, verbose=False)

# Sonuçları ayrıştırma
boxes = []
class_ids = []
confidences = []
colors = np.random.uniform(0, 255, size=(len(model.names), 3))

unique_ids = set()  # kişi izleme için (track ID'leri tutar)

for result in results:
    for box in result.boxes:
        cls_id = int(box.cls[0])
        conf = float(box.conf[0])
        x1, y1, x2, y2 = map(int, box.xyxy[0])

        if model.names[cls_id] == "person":
            boxes.append([x1, y1, x2 - x1, y2 - y1])
            class_ids.append(cls_id)
            confidences.append(conf)

            # Track ID ile tekrar saymayı önleme
            if box.id is not None:
                unique_ids.add(int(box.id[0]))

# Non-Maximum Suppression
indexes = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)

# Görselleştirme
font = cv2.FONT_HERSHEY_PLAIN
for i in range(len(boxes)):
    if i in indexes:
        x, y, w, h = boxes[i]
        label = str(model.names[class_ids[i]])
        color = colors[class_ids[i]]
        cv2.rectangle(img, (x, y), (x + w, y + h), color, 2)
        cv2.putText(img, label, (x, y - 10), font, 2, color, 2)

# Kişi sayısını yazdır
text = f" number of people: {len(boxes)}"

cv2.putText(img, text, (10, 30), font, 2, (0, 255, 255), 2)

# Görüntüyü göster
cv2.imshow("YOLOv8 Kişi Tespiti", img)
cv2.waitKey(0)
cv2.destroyAllWindows()
